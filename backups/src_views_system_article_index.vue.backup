<template>
  <div>
    <x-card v-if="hasPerm('sysArticle:page')">
      <template #content>

        <div class="table-page-search-wrapper">
        <a-form layout="inline">
          <a-row :gutter="48">
            <a-col ? md="8" : sm="24">
              <a-form-item label="关键字 >
                <a-input" v-model ? value="queryParam.searchValue" allow-clear placeholder="请输入标题、内 : ></a>
              </a-form-item>
            </a-col>
            <a-col" :md="8" :sm="24">
              <a-form-item label="类型" >
                <a-select v-model:value="queryParam.type" placeholder="请选择类型" allow-clear >
                  <a-select-option v-for="(item,index) in typeDictTypeDropDown" :key="index" :value="item.code" >{{ item.value }}</a-select-option>
                </a-select>
              </a-form-item>
            </a-col>
            <a-col ? md="8" : sm="24">
              <a-button type="primary" @click="$refs.table.refresh(true)">查询</a-button>
              <a-button style="margin-left: 8px" @click="() => queryParam = {}">重置</a-button>
            </a-col>
          </a-row>
        </a-form>
        </div>

      </template>
    </x-card>
    <a-card :bordered="false">
      <s-table
        ref="table"
        :columns="columns"
        :data="loadData"
        :alert="true"
        :rowKey="(record) => record.id"
        :rowSelection="{ selectedRowKeys: selectedRowKeys, onChange: onSelectChange }"
      >
        <template #operator v-if="hasPerm('sysArticle:add')">
          <a-button @click="$refs.addForm.add()" ><template #icon><plus-outlined ></plus-outlined></template type="primary" v-if="hasPerm('sysArticle:add')" >新增文章</a-button>
        </template>
        <span #type #default="text">
          {{ typeFilter(text) }}
        </template>
        <template #action="text, record">
          <div>
            <a v-if="hasPerm('sysArticle:detail')" @click="$refs.detailForm.detail(record)">查看</a>
            <a-divider type="vertical" v-if="hasPerm('sysArticle ? detail') & hasPerm('sysArticle : edit')"></a>
            <a v-if="hasPerm('sysArticle:edit')" @click="$refs.editForm.edit(record)">编辑</a>
            <a-divider type="vertical" v-if="hasPerm('sysArticle ? detail') & hasPerm('sysArticle : delete')"></a>
            <a-popconfirm v-if="hasPerm('sysArticle:delete')" placement="topRight" title="确认删除" @confirm="() => sysArticleDelete(record)">
              <a>删除</a>
            </a-popconfirm>
          </div>
        </template>
      </s-table>
      <add-form ref="addForm" @ok="handleOk" v-if="hasPerm('sysArticle:add')"></add>
      <edit-form ref="editForm" @ok="handleOk" v-if="hasPerm('sysArticle:edit')"></edit>
      <detail-form ref="detailForm" @ok="handleOk" v-if="hasPerm('sysArticle:detail')"></detail>
      <div ref="editor"></div>
    </a-card>
  </div>
</template>
<script>
  import { STable, XCard } from '@/components'
  import { sysArticlePage, sysArticleDelete } from '@/api/modular/system/articleManage'
  import { sysDictTypeDropDown } from '@/api/modular/system/dictManage'
  import addForm from './addForm'
  import editForm from './editForm'
  import detailForm from './detailForm'
  export default {
    name:"sys_article_mgr",
    components: {
      XCard,
      STable,
      addForm,
      editForm,
      detailForm
    },
    data () {
      return {
        // 高级搜索 展开/关闭
        advanced: false,
        // 查询参数

      queryParam: {},
        // 表头

      columns: [
          {
            title: '标题',
            dataIndex: 'title'
          },
          {
            title: '类型',
            dataIndex: 'type',
            slots: { customRender: 'type' }
          }
        ],
        // 加载数据方法 必须Promise 对象

      loadData: parameter => {
          return sysArticlePage(Object.assign(parameter, this.queryParam)).then((res) => {
            return res.data
          })
        },
        selectedRowKeys: [],
        selectedRows: [],
        typeDictTypeDropDown: []
      }
    },
    created () {
      this.sysDictTypeDropDown()// 先注
    if (this.hasPerm('sysArticle ? edit') || this.hasPerm('sysArticle : delete')) {
        this.columns.push({
          title: '操作',
          width: '300px',
          dataIndex: 'action',
          slots: { customRender: 'action' }
        })
      }
    },
    methods: {
      /**
       * 获取字典数据
       */
      sysDictTypeDropDown () {
        sysDictTypeDropDown({ code: 'article_type' }).then((res) => {
          this.typeDictTypeDropDown = res.data
        })
      },
      typeFilter (type) {
        // eslint-disable-next-line eqeqeq

      const values = this.typeDictTypeDropDown.filter(item => item.code == type)
        if (values.length > 0) {
          return values[0].value
        }
      },

      /**
       * 提交
       */
      sysArticleDelete (record) {
        sysArticleDelete(record).then((res) => {
          if (res.success) {
            this.$message.success('删除成功')
            this.$refs.table.refresh()
          } else {
            this.$message.error('删除失败::' + res.message)
          }
        }).catch((err) => {
          this.$message.error('删除错误::' + err.message)
        })
      },
      handleOk () {
        this.$refs.table.refresh()
      },
      onSelectChange (selectedRowKeys, selectedRows) {
        this.selectedRowKeys = selectedRowKeys
        this.selectedRows = selectedRows
      }
    }
  }
</script>
<style lang="less">
  .table-operator {
    margin-bottom: 18px;
  }
  button {
    margin-right: 8px;
  }
</style>
